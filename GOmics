#!/usr/bin/env python

# In[5]:


from pandas import Series, DataFrame 
import pandas as pd
from pandas.compat import StringIO
import csv
import pandas
import pathlib
pd.set_option('max_rows',100000)
pd.set_option('max_colwidth',100000)
import urllib.request
import webbrowser
import re
import shutil, os
import numpy as np
from urllib.request import urlopen
from bs4 import BeautifulSoup
import requests
from time import sleep
from subprocess import Popen, PIPE, STDOUT
from subprocess import call
import shlex, subprocess
import subprocess
import sys
import warnings
warnings.filterwarnings("ignore")


# In[ ]:


print('\nFunctional Enrichment Analysis')
print('▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n')
print('■  1  Gene Ontology Enrichment\n')
print('■  2  KEGG Pathways Enrichment\n')
print('■  3  KEGG Pathways Enrichment using blastp (*** Not enabled)')
print('\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n')
a='b'
analysis=input('▬▬▬▬▬▬▬▬\nSelect an analysis (e.g., 1 / 2 / 3)\n▬▬▬▬▬▬▬▬\n=====> : ')
if float(analysis) == 1:
    enrich=requests.get("https://raw.githubusercontent.com/bioinfproject/bioinfo/master/GO_api.py").content.decode()
    enrichment=open("enrichment.py","w")
    enrichment.write(enrich)
    enrichment.close()
else:
    if float(analysis) == 2:
        enrich=requests.get("https://raw.githubusercontent.com/bioinfproject/bioinfo/master/K.py").content.decode()
        enrichment=open("enrichment.py","w")
        enrichment.write(enrich)
        enrichment.close()
    else:
        if float(analysis) == 3:
	    #print('!!!!!!! Not enabled !!!!!!!')
            enrich=requests.get("https://raw.githubusercontent.com/bioinfproject/bioinfo/master/K_Unch.py").content.decode()
            enrichment=open("enrichment.py","w")
            enrichment.write(enrich)
            enrichment.close()
        else:
            analysis=input('▬▬▬▬▬▬▬▬\nSelect an analysis correctly (e.g., 1 / 2 / 3)\n▬▬▬▬▬▬▬▬\n=====> : ')
            if float(analysis) == 1:
                enrich=requests.get("https://raw.githubusercontent.com/bioinfproject/bioinfo/master/GO_api.py").content.decode()
                enrichment=open("enrichment.py","w")
                enrichment.write(enrich)
                enrichment.close()
            else:
                if float(analysis) == 2:
                    enrich=requests.get("https://raw.githubusercontent.com/bioinfproject/bioinfo/master/K.py").content.decode()
                    enrichment=open("enrichment.py","w")
                    enrichment.write(enrich)
                    enrichment.close()
                else:
                    if float(analysis) == 3:
     			#print('!!!!!!! Not enabled !!!!!!!')
                        enrich=requests.get("https://raw.githubusercontent.com/bioinfproject/bioinfo/master/K_Unch.py").content.decode()
                        enrichment=open("enrichment.py","w")
                        enrichment.write(enrich)
                        enrichment.close()
                        print('\n!!!!!!! Analysis not found !!!!!!!\n')
                        sys.exit()
                        
subprocess.call(['python', 'enrichment.py'])

